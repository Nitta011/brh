/* Criar procedure insere_projeto */

CREATE OR REPLACE PROCEDURE BRH.INSERE_PROJETO
(p_ID IN NUMBER, p_NOME IN VARCHAR2, p_RESPONSAVEL IN VARCHAR2, p_INICIO IN DATE)
IS
BEGIN
 INSERT INTO BRH.PROJETO (NOME, RESPONSAVEL, INICIO) VALUES (UPPER(p_NOME), p_RESPONSAVEL, p_INICIO);
END;   

--exemplo--
EXECUTE BRH.INSERE_PROJETO ('SPACLER', 'X123', '15/09/2022');
COMMIT;		



/* CRIAR FUNÇÃO CALCULA_IDADE */
	
CREATE OR REPLACE FUNCTION BRH.CALCULA_IDADE
(p_DATA_REFERENCIA %TYPE)
RETURN NUMBER
IS
    v_IDADE NUMBER;
BEGIN
    v_IDADE := FLOOR(MONTHS_BETWEEN (SYSDATE, p_DATA_REFERENCIA)/12);
    RETURN v_IDADE;
    END;
    --exemplo--
    SELECT BRH.CALCULA_IDADE (TO_DATE('11/03/2002', 'DD/MM/YYYY')) AS IDADE FROM DUAL;


/* CRIAR FUNÇÃO FINALIZA_PROJETO */

CREATE OR REPLACE FUNCTION BRH.FINALIZA_PROJETO
(p_ID NUMBER)
RETURN BRH.PROJETO.FIM%TYPE
IS 
v_DATA_FIM PROJETO.FIM%TYPE;

BEGIN
v_DATA_FIM := SYSDATE;
    UPDATE BRH.PROJETO 
        SET FIM = v_DATA_FIM WHERE ID = p_ID;
            IF SQL%NOTFOUND THEN
               RAISE_APPLICATION_ERROR(-20000, 'PROJETO INEXISTENTE: ' || p_ID);
            END IF;
        
        RETURN v_DATA_FIM;
END;


/* VALIDAR NOVO PROJETO */
CREATE OR REPLACE PROCEDURE BRH.INSERE_PROJETO
(p_NOME IN VARCHAR2, p_RESPONSAVEL IN VARCHAR2, p_INICIO IN DATE)
IS
v_VALIDA_NOME NUMBER;
BEGIN
        v_VALIDA_NOME := LENGTH(p_NOME); 
        INSERT INTO BRH.PROJETO (NOME, RESPONSAVEL, INICIO) VALUES (UPPER(p_NOME), p_RESPONSAVEL, p_INICIO);
            IF v_VALIDA_NOME < 2 THEN 
                RAISE_APPLICATION_ERROR(-20942, 'Nome de projeto inválido! Deve ter dois ou mais caracteres.'  || p_NOME);
            END IF;
END; 
